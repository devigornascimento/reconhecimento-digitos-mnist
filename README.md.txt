# üß† Reconhecimento de D√≠gitos com Rede Neural Convolucional (CNN)

![Python](https://img.shields.io/badge/Python-3.11+-blue?style=for-the-badge&logo=python)
![TensorFlow](https://img.shields.io/badge/TensorFlow-2.10+-orange?style=for-the-badge&logo=tensorflow)
![Keras](https://img.shields.io/badge/Keras-%23D00000.svg?style=for-the-badge&logo=Keras&logoColor=white)

---

## üéØ Sobre o Projeto

Este projeto consiste na constru√ß√£o de uma **Rede Neural Convolucional (CNN)**, utilizando Python e a biblioteca TensorFlow/Keras, com o objetivo de classificar d√≠gitos manuscritos. O modelo foi treinado e avaliado com o renomado dataset **MNIST**, uma cole√ß√£o de 70.000 imagens em escala de cinza que serve como um dos principais benchmarks na √°rea de Vis√£o Computacional.

O desenvolvimento deste projeto serviu para aplicar e demonstrar na pr√°tica os seguintes conceitos:
- Pr√©-processamento e normaliza√ß√£o de dados de imagem.
- Constru√ß√£o de uma arquitetura de CNN camada a camada (`Conv2D`, `MaxPooling2D`, `Flatten`, `Dense`).
- Compila√ß√£o e treinamento de um modelo de Deep Learning.
- Avalia√ß√£o de performance com m√©tricas como acur√°cia e perda.
- An√°lise de curvas de aprendizado para diagnosticar o treinamento.

---

## ‚ú® Demonstra√ß√£o Visual

A imagem abaixo ilustra o modelo em a√ß√£o, realizando uma previs√£o correta em uma amostra do conjunto de teste que nunca havia visto durante o treinamento.

![Demonstra√ß√£o do Modelo](demonstracao.png)

---

## üõ†Ô∏è Tecnologias Utilizadas

O projeto foi desenvolvido com as seguintes tecnologias e bibliotecas:

- **Python:** Linguagem de programa√ß√£o principal.
- **TensorFlow/Keras:** Framework para constru√ß√£o e treinamento da rede neural.
- **NumPy:** Para manipula√ß√£o eficiente de arrays num√©ricos.
- **Matplotlib:** Para visualiza√ß√£o dos dados e dos resultados.
- **Jupyter Notebook:** Ambiente de desenvolvimento interativo.
- **Git & GitHub:** Para versionamento e hospedagem do c√≥digo.

---


## üìä Resultados e An√°lise

O modelo foi treinado por 15 √©pocas e avaliado no conjunto de teste de 10.000 amostras.

- **Acur√°cia Final no Conjunto de Teste:** **98.90%** 

As curvas de aprendizado abaixo demonstram que o modelo teve um treinamento saud√°vel, com as m√©tricas de treino e valida√ß√£o convergindo de forma est√°vel e sem sinais evidentes de overfitting.

**Acur√°cia do Modelo por √âpoca**
![Gr√°fico de Acur√°cia](acuracia.png)

**Perda do Modelo por √âpoca**
![Gr√°fico de Perda](perda.png)

---